









The different uses in each link are divided into auxiliary modules, penetration attack modules, post-penetration attack modules, load modules, and empty fingers.











command module, encoder module, etc. These modules have a very clear structure and a predefined interface and can be loaded into











In the detection system framework, it can be combined to support penetration testing tasks such as information collection, penetration attacks, and post-penetration attack expansion.





1) Auxiliary module
Provides a large number of auxiliary module support in the penetration information collection process, including scanning and enumeration, construction of various network services

















Fake services collect login passwords, password guessing and other modules. In addition, the auxiliary module also includes some attack payloads that do not need to be loaded.











It is often not a penetration attack to gain remote control of the target system. The entire information collection is mainly divided into the following three steps:























(1) Verify whether the system is running: Determine whether the target system has been turned on and whether it can communicate with our computer.











communicate or interact with each other. Log all active computers that responded.





















(2) Scan system ports: Used to identify which ports are opened and which services are running on a specific host. Scanning















When the system is single-ported, record and save the output results of all tools.

























(3) Scan the system for vulnerabilities: Vulnerability scanning is a DW that identifies the services and software running on the target computer.





Some known vulnerabilities.













Commonly used tools and methods are as follows:





Ping: Ping is a specific type of network data packet, called a CMP data packet. The ping packet not only tells us that a certain





The machine is active and receiving traffic, but also provides other valuable information, including the round-trip time of the packet.

















Port scanning: The purpose of port scanning is to identify which ports are open on our target system and determine which





















The service is started.

















ACK scan: Scan host to





The machine sends an ACK packet. Get the port information based on the returned RST packet.

bureau

























If the TTL value of the returned RST packet is less than or equal to 64, the port is open, otherwise the port is closed.





































FIN scan: After a packet with the FIN bit set is sent in FIN scan, if the target host responds with an RST packet,



If it indicates that the port is closed, if there is no response, it indicates that it is open.













Connect() scan: This scan attempts "three-way handshake" communication with each TCP port. If it can be successfully established

















47115

